services:
  rest-api:
    image: danyalegendary/rest-api:latest
    container_name: rest-api
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - JWT_SECRET=${JWT_SECRET}
      - ACCESS_TOKEN_EXP=${ACCESS_TOKEN_EXP}
      - REFRESH_TOKEN_EXP=${REFRESH_TOKEN_EXP}
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - zookeeper
      - kafka

  email-sender:
    image: danyalegendary/email-sender:latest
    container_name: email-sender
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - KAFKA_HOST=kafka
      - KAFKA_PORT=9092
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
    ports:
      - "8081:8081"
    depends_on:
      - zookeeper
      - kafka

  scheduler:
    image: danyalegendary/scheduler:latest
    container_name: scheduler
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
    ports:
      - "8082:8082"
    depends_on:
      - postgres
      - zookeeper
      - kafka

  web-ui:
    image: danyalegendary/web-ui:latest
    container_name: web-ui
    ports:
      - "80:80"
    depends_on:
      - rest-api

  postgres:
    image: postgres:14-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.7.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  postgres_data: